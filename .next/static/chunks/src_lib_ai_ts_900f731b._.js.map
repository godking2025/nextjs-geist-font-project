{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/ai.ts"],"sourcesContent":["import { ChatMessage } from '@/app/page'\n\nexport async function sendMessageToLLM(messages: ChatMessage[], apiKey: string): Promise<string> {\n  try {\n    // Convert our message format to OpenRouter format\n    const openRouterMessages = messages.map(msg => ({\n      role: msg.sender === 'user' ? 'user' : 'assistant',\n      content: msg.text\n    }))\n\n    const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${apiKey}`,\n        'Content-Type': 'application/json',\n        'HTTP-Referer': window.location.origin,\n        'X-Title': 'AI Assistant App'\n      },\n      body: JSON.stringify({\n        model: 'openai/gpt-4o',\n        messages: [\n          {\n            role: 'system',\n            content: 'You are a helpful AI assistant. Provide clear, concise, and helpful responses to user questions.'\n          },\n          ...openRouterMessages\n        ],\n        temperature: 0.7,\n        max_tokens: 1000\n      })\n    })\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}))\n      throw new Error(`API Error: ${response.status} - ${errorData.error?.message || 'Unknown error'}`)\n    }\n\n    const data = await response.json()\n    \n    if (!data.choices || !data.choices[0] || !data.choices[0].message) {\n      throw new Error('Invalid response format from API')\n    }\n\n    return data.choices[0].message.content\n  } catch (error) {\n    console.error('AI API Error:', error)\n    if (error instanceof Error) {\n      throw error\n    }\n    throw new Error('Failed to get AI response')\n  }\n}\n"],"names":[],"mappings":";;;AAEO,eAAe,iBAAiB,QAAuB,EAAE,MAAc;IAC5E,IAAI;QACF,kDAAkD;QAClD,MAAM,qBAAqB,SAAS,GAAG,CAAC,CAAA,MAAO,CAAC;gBAC9C,MAAM,IAAI,MAAM,KAAK,SAAS,SAAS;gBACvC,SAAS,IAAI,IAAI;YACnB,CAAC;QAED,MAAM,WAAW,MAAM,MAAM,iDAAiD;YAC5E,QAAQ;YACR,SAAS;gBACP,iBAAiB,CAAC,OAAO,EAAE,QAAQ;gBACnC,gBAAgB;gBAChB,gBAAgB,OAAO,QAAQ,CAAC,MAAM;gBACtC,WAAW;YACb;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB,OAAO;gBACP,UAAU;oBACR;wBACE,MAAM;wBACN,SAAS;oBACX;uBACG;iBACJ;gBACD,aAAa;gBACb,YAAY;YACd;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAC,CAAC;YACvD,MAAM,IAAI,MAAM,CAAC,WAAW,EAAE,SAAS,MAAM,CAAC,GAAG,EAAE,UAAU,KAAK,EAAE,WAAW,iBAAiB;QAClG;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,KAAK,OAAO,CAAC,EAAE,IAAI,CAAC,KAAK,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE;YACjE,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,KAAK,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO;IACxC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,IAAI,iBAAiB,OAAO;YAC1B,MAAM;QACR;QACA,MAAM,IAAI,MAAM;IAClB;AACF","debugId":null}}]
}